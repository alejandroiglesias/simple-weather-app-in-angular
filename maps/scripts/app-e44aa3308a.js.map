{"version":3,"sources":["scripts/app.js"],"names":["_classCallCheck","instance","Constructor","TypeError","routesConfig","$stateProvider","$urlRouterProvider","otherwise","state","url","component","angular","module","constant","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","WeatherService","$http","$q","openWeatherMapAppId","this","_$http","_$q","requestParams","params","APPID","units","value","city","_this","merge","q","get","then","response","data","cod","reject","service","WeatherController","weatherService","_weatherService","cities","date","Date","now","text","_getWeather","getWeather","controller","templateUrl","run","$templateCache","put","config"],"mappings":"AAAA,YAOA,SAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCA+ChH,QAAIH,iBAAeC,EAAcC,GAAS,KAAAD,YAAkCC,IAAgB,KAAI,IAAMC,WAAQ,qCA0E9G,QAAQC,cAAcC,EAAOC,GAK3BA,EAAmBC,UAAU,YAE7BF,EAAeG,MAAM,OAFrBC,IAAA,WAIEC,UAAW,yEAvIfC,QAAQC,OAAO,cAAeC,SAAS,sBAAuB,mCAG9D,IAAIC,cAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUlB,EAAayB,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBb,EAAY2B,UAAWF,GAAiBC,GAAab,EAAiBb,EAAa0B,GAAqB1B,MAI5hB4B,eAAiB,WAGnB,QAASA,GAAeC,EAAOC,EAAIC,GACjCjC,gBAAgBkC,KAAMJ,GAAtBI,KAAAC,OAAAJ,EAGAG,KAAKE,IAAMJ,EAAXE,KAAKG,eAGHC,QADFC,MAAKN,EACHO,MAAQ,WA6BZ,sDAfA1B,aAAagB,IACXJ,IAAK,aADPe,MAAA,SAA6BC,GAC3B,GAAKC,GAAAT,KAECI,EAAQ3B,QAAAiC,OAAAN,QAAAO,EAAAH,IAAAR,KAAAG,cAGZ,OAAOH,MAAKC,OAAOW,IAAI,iDAAkDR,GAAQS,KAAK,SAAUC,GADhG,MAA2B,QAAvBA,EAASC,KAAAC,IACNP,EAAKP,IAAOe,OAAI,sBAEnBH,EAAaC,WAOdnB,IAGTnB,SAAQC,OAAO,WAAWwC,QAAQ,iBAAkBtB,eACpD,IAAAhB,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAAC,GAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAA,CAAA,GAAAE,GAAAH,EAAAC,EAAAE,GAAAC,WAAAD,EAAAC,aAAA,EAAAD,EAAAE,cAAA,EAAA,SAAAF,KAAAA,EAAAG,UAAA,GAAAC,OAAAC,eAAAT,EAAAI,EAAAM,IAAAN,IAAA,MAAA,UAAAlB,EAAAyB,EAAAC,GAAA,MAAAD,IAAAZ,EAAAb,EAAA2B,UAAAF,GAAAC,GAAAb,EAAAb,EAAA0B,GAAA1B,MAIAmD,kBAAS,WAKP,QAASA,GAAkBtB,EAAOuB,GAChCtD,gBAAgBkC,KAAMmB,GADxBnB,KAAAC,OAASJ,EACPG,KAAAqB,gBAAsBD,EAEtBpB,KAAKsB,UACLtB,KAAKuB,KAAAC,KAAAC,MAkDP,4CAtCA7C,aAAauC,IACX3B,IAAK,UACLe,MAAO,SAAiBC,GAF1B,GAAAC,GAAaT,IAGLA,MAAAsB,OAAQd,EAAAkB,OAGZ1B,KAAI2B,YAAYnB,GAAKK,KAAO,SAAAE,GAC1BN,EAAAa,OAAAd,EAAAkB,MAAAX,OAcJvB,IAAK,cACLe,MAAO,SAAqBC,GAF3B,MAAAR,MAAAqB,gBAAAO,WAAApB,EAAAkB,SAYDlC,IAAK,aACLe,MAAO,SAAoBC,SAF1BR,MAAAsB,OAAAd,EAAAkB,UAOIP,IAGT1C,SAHEC,OAAO,WAAAF,UAAA,WAIPqD,WAAYV,kBACZW,YAAa,uCAIfrD,QAAQC,OAAO,OAAQ,gBAAiB,YAAa,cAAe,YAAa,YAFjFD,QAAAC,OAAA,OAAAqD,KAAA,iBAAA,SAAAC,GAAAA,EAAAC,IAAA,qCAAA,ulCAGAxD,QAAQC,OAAO,OAAOwD,OAAKhE","file":"scripts/app-e44aa3308a.js","sourcesContent":["'use strict';\n\nangular.module('weather', []).constant('openWeatherMapAppId', 'ed0cf75d34cbe0236f9e94985a91fea2');\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar WeatherService = function () {\n\n  /** @ngInject */\n  function WeatherService($http, $q, openWeatherMapAppId) {\n    _classCallCheck(this, WeatherService);\n\n    this._$http = $http;\n    this._$q = $q;\n\n    this.requestParams = {\n      params: {\n        APPID: openWeatherMapAppId,\n        units: 'metric'\n      }\n    };\n  }\n\n  /**\n   * Gets weather for a given city and returns a promise.\n   * @param city\n   * @returns {HttpPromise}\n   */\n\n\n  _createClass(WeatherService, [{\n    key: 'getWeather',\n    value: function getWeather(city) {\n      var _this = this;\n\n      var params = angular.merge({ params: { q: city } }, this.requestParams);\n      return this._$http.get('http://api.openweathermap.org/data/2.5/weather', params).then(function (response) {\n        if (response.data.cod !== '200') {\n          return _this._$q.reject('some error occured');\n        }\n        return response.data;\n      });\n    }\n  }]);\n\n  return WeatherService;\n}();\n\nangular.module('weather').service('weatherService', WeatherService);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar WeatherController = function () {\n\n  /** @ngInject */\n  function WeatherController($http, weatherService) {\n    _classCallCheck(this, WeatherController);\n\n    this._$http = $http;\n    this._weatherService = weatherService;\n\n    this.cities = {};\n    this.date = Date.now();\n  }\n\n  /**\n   * Adds city to the map of requested cities.\n   * @param city\n   */\n\n\n  _createClass(WeatherController, [{\n    key: 'addCity',\n    value: function addCity(city) {\n      var _this = this;\n\n      // If we already have the city in our map, nothing needs to be done.\n      if (this.cities[city.text]) {\n        return;\n      }\n      this._getWeather(city).then(function (data) {\n        _this.cities[city.text] = data;\n      });\n    }\n\n    /**\n     * Gets weather from service for a given city.\n     * @param city\n     * @returns {HttpPromise}\n     */\n\n  }, {\n    key: '_getWeather',\n    value: function _getWeather(city) {\n      return this._weatherService.getWeather(city.text);\n    }\n\n    /**\n     * Removes city from the map of requested cities.\n     * @param city\n     */\n\n  }, {\n    key: 'removeCity',\n    value: function removeCity(city) {\n      delete this.cities[city.text];\n    }\n  }]);\n\n  return WeatherController;\n}();\n\nangular.module('weather').component('weather', {\n  controller: WeatherController,\n  templateUrl: 'app/weather/weather.component.html'\n});\n'use strict';\n\nangular.module('app', ['angularMoment', 'ngAnimate', 'ngTagsInput', 'ui.router', 'weather']);\nangular.module('app').run(['$templateCache', function($templateCache) {$templateCache.put('app/weather/weather.component.html','<div class=\"topbar\">\\n  <div class=\"container\">\\n    <tags-input class=\"tags-input\" ng-model=\"$ctrl.query\" on-tag-added=\"$ctrl.addCity($tag)\" on-tag-removed=\"$ctrl.removeCity($tag)\" placeholder=\"Enter a city\" replace-spaces-with-dashes=\"false\">\\n    </tags-input>\\n  </div>\\n</div>\\n\\n<div class=\"weather-cities-list container-flex\">\\n  <div class=\"weather-box col-md-third\" ng-repeat=\"city in $ctrl.cities track by city.id\">\\n    <div class=\"weather-box-city\">\\n      {{city.name}}<br>\\n      <small class=\"text-muted\">{{$ctrl.date | amDateFormat:\\'MMMM Do\\'}}</small>\\n    </div>\\n    <div class=\"weather-box-temp\">\\n      <strong class=\"weather-box-temp-number lead\">\\n        {{city.main.temp | number:0}}\\n        <sup class=\"weather-box-temp-degree-symbol\">&deg;C</sup>\\n      </strong>\\n      <br>\\n      <small class=\"weather-box-temp-description text-muted\">{{city.weather[0].description}}</small>\\n    </div>\\n    <div class=\"weather-box-misc\">\\n      <small>Humidity:&nbsp;{{city.main.humidity}}%</small>\\n      <small>Wind:&nbsp;{{city.wind.speed}}km/h</small>\\n    </div>\\n  </div>\\n</div>\\n');}]);\n'use strict';\n\nangular.module('app').config(routesConfig);\n\n/** @ngInject */\nfunction routesConfig($stateProvider, $urlRouterProvider /* , $locationProvider */) {\n  // $locationProvider.html5Mode(true).hashPrefix('!');\n  $urlRouterProvider.otherwise('/weather');\n\n  $stateProvider.state('app', {\n    url: '/weather',\n    component: 'weather'\n  });\n}"],"sourceRoot":"/source/"}