"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function routesConfig(e,t){t.otherwise("/weather"),e.state("app",{url:"/weather",component:"weather"})}routesConfig.$inject=["$stateProvider","$urlRouterProvider"],angular.module("weather",[]).constant("openWeatherMapAppId","ed0cf75d34cbe0236f9e94985a91fea2");var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,a,r){return a&&e(t.prototype,a),r&&e(t,r),t}}(),WeatherService=function(){function e(t,a,r){_classCallCheck(this,e),this._$http=t,this._$q=a,this.requestParams={params:{APPID:r,units:"metric"}}}return e.$inject=["$http","$q","openWeatherMapAppId"],_createClass(e,[{key:"getWeather",value:function(e){var t=this,a=angular.merge({params:{q:e}},this.requestParams);return this._$http.get("http://api.openweathermap.org/data/2.5/weather",a).then(function(e){return"200"!==e.data.cod?t._$q.reject("some error occured"):e.data})}}]),e}();angular.module("weather").service("weatherService",WeatherService);var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,a,r){return a&&e(t.prototype,a),r&&e(t,r),t}}(),WeatherController=function(){function e(t,a){_classCallCheck(this,e),this._$http=t,this._weatherService=a,this.cities={},this.date=Date.now()}return e.$inject=["$http","weatherService"],_createClass(e,[{key:"addCity",value:function(e){var t=this;this.cities[e.text]||this._getWeather(e).then(function(a){t.cities[e.text]=a})}},{key:"_getWeather",value:function(e){return this._weatherService.getWeather(e.text)}},{key:"removeCity",value:function(e){delete this.cities[e.text]}}]),e}();angular.module("weather").component("weather",{controller:WeatherController,templateUrl:"app/weather/weather.component.html"}),angular.module("app",["angularMoment","ngAnimate","ngTagsInput","ui.router","weather"]),angular.module("app").run(["$templateCache",function(e){e.put("app/weather/weather.component.html",'<div class="topbar">\n  <div class="container">\n    <tags-input class="tags-input" ng-model="$ctrl.query" on-tag-added="$ctrl.addCity($tag)" on-tag-removed="$ctrl.removeCity($tag)" placeholder="Enter a city" replace-spaces-with-dashes="false">\n    </tags-input>\n  </div>\n</div>\n\n<div class="weather-cities-list container-flex">\n  <div class="weather-box col-md-third" ng-repeat="city in $ctrl.cities track by city.id">\n    <div class="weather-box-city">\n      {{city.name}}<br>\n      <small class="text-muted">{{$ctrl.date | amDateFormat:\'MMMM Do\'}}</small>\n    </div>\n    <div class="weather-box-temp">\n      <strong class="weather-box-temp-number lead">\n        {{city.main.temp | number:0}}\n        <sup class="weather-box-temp-degree-symbol">&deg;C</sup>\n      </strong>\n      <br>\n      <small class="weather-box-temp-description text-muted">{{city.weather[0].description}}</small>\n    </div>\n    <div class="weather-box-misc">\n      <small>Humidity:&nbsp;{{city.main.humidity}}%</small>\n      <small>Wind:&nbsp;{{city.wind.speed}}km/h</small>\n    </div>\n  </div>\n</div>\n')}]),angular.module("app").config(routesConfig);
//# sourceMappingURL=../maps/scripts/app-e44aa3308a.js.map
